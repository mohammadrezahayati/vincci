{
  "env": {
    "browser": true,
    "node": true,
    "es2021": true,
  },
  "extends": [
    "eslint:recommended", // Basic recommended rules
    "plugin:@typescript-eslint/recommended", // TypeScript recommended rules
    "plugin:prettier/recommended", // Prettier integration
    "plugin:react/recommended", // React specific rules (if using React)
    "plugin:react/jsx-runtime", // React JSX runtime (for React 17+)
  ],
  "parser": "@typescript-eslint/parser", // Use the TypeScript parser
  "parserOptions": {
    "ecmaVersion": 12, // Allow modern ECMAScript syntax
    "sourceType": "module", // Allow imports/exports
    "project": "./tsconfig.json", // Path to your tsconfig.json
  },
  "plugins": [
    "@typescript-eslint", // TypeScript plugin
    "prettier", // Prettier plugin for formatting
    "react", // React plugin (if needed)
    "react-hooks", // React hooks plugin (if using React)
  ],
  "rules": {
    // TypeScript specific rules
    "@typescript-eslint/explicit-module-boundary-types": "off", // Allow implicit return types (optional)
    "@typescript-eslint/no-unused-vars": "warn", // Warn about unused variables
    "@typescript-eslint/no-explicit-any": "off", // Avoid 'any' type, use it cautiously
    "@typescript-eslint/ban-ts-comment": "warn", // Warn on ts-comments usage (optional)

    // React specific rules (if using React)
    "react/jsx-uses-react": "off", // Disable React import check in JSX (React 17+ doesn't need it)
    "react/react-in-jsx-scope": "off", // React 17+ JSX doesn't require `React` in scope
    "react/prop-types": "off", // Disable PropTypes validation (use TypeScript instead)
    "react-hooks/rules-of-hooks": "error", // Enforce hooks rules
    "react-hooks/exhaustive-deps": "warn", // Check effect dependencies

    // Prettier integration rules
    "prettier/prettier": [
      "error",
      {
        "singleQuote": true, // Use single quotes instead of double
        "trailingComma": "all", // Add trailing commas where possible
        "semi": true, // Enforce semicolons at the end of statements
        "tabWidth": 2, // Set tab width to 2 spaces
        "printWidth": 80, // Line length limit
      },
    ],

    // Miscellaneous best practices
    "no-console": "warn", // Warn about console.log() usage
    "no-debugger": "error", // Disable debugger statements in production
    "eqeqeq": "warn", // Enforce strict equality (=== and !==)
    "consistent-return": "warn", // Ensure consistent return behavior
    "no-empty-function": "warn", // Warn about empty functions
    "no-unused-vars": "off", // Disable base ESLint unused-vars rule since @typescript-eslint handles it
    "no-shadow": "warn", // Warn about variable shadowing
  },
  "settings": {
    "react": {
      "version": "detect", // Automatically detect React version
    },
  },
}
